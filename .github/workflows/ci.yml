name: TEROS CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist
      
    - name: Run Python tests
      run: |
        pytest tests/ -v --cov=src/lib/teros --cov=src/kernel --cov-report=term-missing --cov-report=xml
      
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
      
  build-c:
    name: Build C Kernel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential nasm qemu-system-x86 gdb
      
    - name: Build kernel
      run: |
        make clean
        make all
      
    - name: Test in QEMU
      run: |
        timeout 10 qemu-system-x86_64 -kernel bin/teros.bin -serial stdio -display none || true
      
    - name: Upload kernel binary
      uses: actions/upload-artifact@v4
      with:
        name: kernel-binary
        path: bin/teros.bin
        
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t teros:latest .
      
    - name: Test Docker containers
      run: |
        docker-compose up -d
        docker-compose ps
        docker-compose logs teros-dev
      
    - name: Push to registry (on master)
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: |
        echo "Would push to registry in production"
        
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      
    - name: Install linting tools
      run: |
        pip install flake8 black isort pylint
      
    - name: Lint Python code
      run: |
        flake8 src/lib/teros --count --select=E9,F63,F7,F82 --show-source --statistics
        black --check src/lib/teros || true
        isort --check src/lib/teros || true
      
  lambda3-tests:
    name: Lambda³ Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
      
    - name: Run Lambda³ tests
      run: |
        pytest tests/lambda3/ -v
      
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: [test, build-c]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate coverage badge
      run: |
        echo "Coverage report would be generated here"
